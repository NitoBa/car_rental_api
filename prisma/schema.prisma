generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Category {
    id          String   @id @default(uuid())
    name        String   @unique
    description String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    Car         Car[]

    @@map("categories")
}

model Specification {
    id                 String               @id @default(uuid())
    name               String
    description        String
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    SpecificationsCars SpecificationsCars[]


    @@map("specifications")
}

model User {
    id             String   @id @default(uuid())
    name           String
    username       String   @unique
    email          String   @unique
    password       String
    avatar         String?
    admin          Boolean  @default(false)
    driver_license String
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    Rental         Rental[]

    @@map("users")
}

model Car {
    id                 String               @id @default(uuid())
    name               String
    description        String
    dailyRate          Int
    available          Boolean              @default(true)
    licensePlate       String               @unique
    fineAmount         Int
    brand              String
    categoryId         String
    category           Category             @relation(fields: [categoryId], references: [id])
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt
    specificationsCars SpecificationsCars[]
    CarImages          CarImages[]
    Rental             Rental[]

    @@map("cars")
}

model SpecificationsCars {
    id              String        @id @default(uuid())
    carId           String
    specificationId String
    car             Car           @relation(fields: [carId], references: [id])
    specification   Specification @relation(fields: [specificationId], references: [id])
    createdAt       DateTime      @default(now())

    @@map("specifications_cars")
}

model CarImages {
    id        String   @id @default(uuid())
    carId     String
    car       Car      @relation(fields: [carId], references: [id])
    imageUrl  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("car_images")
}

model Rental {
    id               String    @id @default(uuid())
    carId            String
    userId           String
    startDate        DateTime
    endDate          DateTime?
    expectReturnDate DateTime
    total            Int?
    createdAt        DateTime  @default(now())
    updatedAt        DateTime  @updatedAt
    car              Car       @relation(fields: [carId], references: [id])
    user             User      @relation(fields: [userId], references: [id])

    @@map("rentals")
}
